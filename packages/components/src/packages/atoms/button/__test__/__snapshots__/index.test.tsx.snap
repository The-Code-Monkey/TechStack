// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> renders default correctly 1`] = `
<Component>
  <Button>
    <Styled(Interactable)
      autoid="Default_button"
      flexDirection="row"
      forwardedAs="button"
      typography="button"
      variant="default"
    >
      <Interactable
        as="button"
        autoid="Default_button"
        className="sc-jSMfEi hxGaF"
        flexDirection="row"
        typography="button"
        variant="default"
      >
        <Styled(Box)
          as="button"
          className="sc-jSMfEi hxGaF"
          data-autoid="Default_button"
          flexDirection="row"
          onClick={[Function]}
          typography="button"
          variant="default"
        >
          <button
            className="sc-hKMtZM sc-jSMfEi hxGaF"
            data-autoid="Default_button"
            onClick={[Function]}
          >
            <Text>
              <styled.span
                data-autoid=""
              >
                <span
                  className="sc-eCYdqJ fZcZz"
                  data-autoid=""
                >
                  Default
                </span>
              </styled.span>
            </Text>
          </button>
        </Styled(Box)>
      </Interactable>
    </Styled(Interactable)>
  </Button>
</Component>
`;

exports[`<Button /> renders icon correctly 1`] = `
<Component>
  <Button
    iconName="GitHub"
  >
    <Styled(Interactable)
      autoid="Secondary_button"
      flexDirection="row"
      forwardedAs="button"
      typography="button"
      variant="default"
    >
      <Interactable
        as="button"
        autoid="Secondary_button"
        className="sc-jSMfEi hxGaF"
        flexDirection="row"
        typography="button"
        variant="default"
      >
        <Styled(Box)
          as="button"
          className="sc-jSMfEi hxGaF"
          data-autoid="Secondary_button"
          flexDirection="row"
          onClick={[Function]}
          typography="button"
          variant="default"
        >
          <button
            className="sc-hKMtZM sc-jSMfEi hxGaF"
            data-autoid="Secondary_button"
            onClick={[Function]}
          >
            <Memo(Icon)
              ml={-2}
              mr={2}
              name="GitHub"
            >
              <Suspense
                fallback={<ForwardRef(HelpCircle) />}
              >
                <Styled(Box)
                  autoid="github_icon"
                  ml={-2}
                  mr={2}
                >
                  <Box
                    autoid="github_icon"
                    className="sc-dkzDqf huekpF"
                  >
                    <styled.div
                      className="sc-dkzDqf huekpF"
                      data-autoid="github_icon"
                    >
                      <div
                        className="sc-gsnTZi kJlumN sc-dkzDqf huekpF"
                        data-autoid="github_icon"
                      />
                    </styled.div>
                  </Box>
                </Styled(Box)>
                <ForwardRef(HelpCircle)>
                  <svg
                    fill="none"
                    height={24}
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    viewBox="0 0 24 24"
                    width={24}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <circle
                      cx="12"
                      cy="12"
                      r="10"
                    />
                    <path
                      d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"
                    />
                    <line
                      x1="12"
                      x2="12.01"
                      y1="17"
                      y2="17"
                    />
                  </svg>
                </ForwardRef(HelpCircle)>
              </Suspense>
            </Memo(Icon)>
            <Text>
              <styled.span
                data-autoid=""
              >
                <span
                  className="sc-eCYdqJ fZcZz"
                  data-autoid=""
                >
                  Secondary
                </span>
              </styled.span>
            </Text>
          </button>
        </Styled(Box)>
      </Interactable>
    </Styled(Interactable)>
  </Button>
</Component>
`;

exports[`<Button /> renders icon only correctly 1`] = `
<Component>
  <Button
    iconName="GitHub"
  >
    <Styled(Interactable)
      autoid="_button"
      flexDirection="row"
      forwardedAs="button"
      typography="button"
      variant="default"
    >
      <Interactable
        as="button"
        autoid="_button"
        className="sc-jSMfEi hxGaF"
        flexDirection="row"
        typography="button"
        variant="default"
      >
        <Styled(Box)
          as="button"
          className="sc-jSMfEi hxGaF"
          data-autoid="_button"
          flexDirection="row"
          onClick={[Function]}
          typography="button"
          variant="default"
        >
          <button
            className="sc-hKMtZM sc-jSMfEi hxGaF"
            data-autoid="_button"
            onClick={[Function]}
          >
            <Memo(Icon)
              name="GitHub"
            >
              <Suspense
                fallback={<ForwardRef(HelpCircle) />}
              >
                <Styled(Box)
                  autoid="github_icon"
                >
                  <Box
                    autoid="github_icon"
                    className="sc-dkzDqf bQHrml"
                  >
                    <styled.div
                      className="sc-dkzDqf bQHrml"
                      data-autoid="github_icon"
                    >
                      <div
                        className="sc-gsnTZi kJlumN sc-dkzDqf bQHrml"
                        data-autoid="github_icon"
                      />
                    </styled.div>
                  </Box>
                </Styled(Box)>
                <ForwardRef(HelpCircle)>
                  <svg
                    fill="none"
                    height={24}
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    viewBox="0 0 24 24"
                    width={24}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <circle
                      cx="12"
                      cy="12"
                      r="10"
                    />
                    <path
                      d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"
                    />
                    <line
                      x1="12"
                      x2="12.01"
                      y1="17"
                      y2="17"
                    />
                  </svg>
                </ForwardRef(HelpCircle)>
              </Suspense>
            </Memo(Icon)>
            <Text>
              <styled.span
                data-autoid=""
              >
                <span
                  className="sc-eCYdqJ fZcZz"
                  data-autoid=""
                />
              </styled.span>
            </Text>
          </button>
        </Styled(Box)>
      </Interactable>
    </Styled(Interactable)>
  </Button>
</Component>
`;

exports[`<Button /> renders primary correctly 1`] = `
<Component>
  <Button
    variant="primary"
  >
    <Styled(Interactable)
      autoid="Primary_button"
      flexDirection="row"
      forwardedAs="button"
      typography="button"
      variant="primary"
    >
      <Interactable
        as="button"
        autoid="Primary_button"
        className="sc-jSMfEi fOiwAw"
        flexDirection="row"
        typography="button"
        variant="primary"
      >
        <Styled(Box)
          as="button"
          className="sc-jSMfEi fOiwAw"
          data-autoid="Primary_button"
          flexDirection="row"
          onClick={[Function]}
          typography="button"
          variant="primary"
        >
          <button
            className="sc-hKMtZM sc-jSMfEi fOiwAw"
            data-autoid="Primary_button"
            onClick={[Function]}
          >
            <Text>
              <styled.span
                data-autoid=""
              >
                <span
                  className="sc-eCYdqJ fZcZz"
                  data-autoid=""
                >
                  Primary
                </span>
              </styled.span>
            </Text>
          </button>
        </Styled(Box)>
      </Interactable>
    </Styled(Interactable)>
  </Button>
</Component>
`;

exports[`<Button /> renders secondary correctly 1`] = `
<Component>
  <Button
    variant="secondary"
  >
    <Styled(Interactable)
      autoid="Secondary_button"
      flexDirection="row"
      forwardedAs="button"
      typography="button"
      variant="secondary"
    >
      <Interactable
        as="button"
        autoid="Secondary_button"
        className="sc-jSMfEi bWHMQb"
        flexDirection="row"
        typography="button"
        variant="secondary"
      >
        <Styled(Box)
          as="button"
          className="sc-jSMfEi bWHMQb"
          data-autoid="Secondary_button"
          flexDirection="row"
          onClick={[Function]}
          typography="button"
          variant="secondary"
        >
          <button
            className="sc-hKMtZM sc-jSMfEi bWHMQb"
            data-autoid="Secondary_button"
            onClick={[Function]}
          >
            <Text>
              <styled.span
                data-autoid=""
              >
                <span
                  className="sc-eCYdqJ fZcZz"
                  data-autoid=""
                >
                  Secondary
                </span>
              </styled.span>
            </Text>
          </button>
        </Styled(Box)>
      </Interactable>
    </Styled(Interactable)>
  </Button>
</Component>
`;
