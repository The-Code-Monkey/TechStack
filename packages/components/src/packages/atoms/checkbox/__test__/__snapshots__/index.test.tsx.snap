// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Checkbox /> renders correctly checked 1`] = `
<Component>
  <Checkbox
    checked={true}
  >
    <Interactable
      alignItems="center"
      autoid="checkbox"
      bgColor="neutrals.0"
      border="1"
      borderColor="neutrals.10"
      borderRadius="1"
      cursor="pointer"
      data-checked={true}
      display="flex"
      justifyContent="center"
      onClick={[Function]}
      opacity="3"
      size={7}
    >
      <Styled(Box)
        alignItems="center"
        bgColor="neutrals.0"
        border="1"
        borderColor="neutrals.10"
        borderRadius="1"
        cursor="pointer"
        data-autoid="checkbox"
        data-checked={true}
        display="flex"
        justifyContent="center"
        onClick={[Function]}
        opacity="3"
        size={7}
      >
        <Box
          alignItems="center"
          bgColor="neutrals.0"
          border="1"
          borderColor="neutrals.10"
          borderRadius="1"
          className="sc-hKMtZM"
          cursor="pointer"
          data-autoid="checkbox"
          data-checked={true}
          display="flex"
          justifyContent="center"
          onClick={[Function]}
          opacity="3"
          size={7}
        >
          <styled.div
            alignItems="center"
            bgColor="neutrals.0"
            border="1"
            borderColor="neutrals.10"
            borderRadius="1"
            className="sc-hKMtZM"
            cursor="pointer"
            data-autoid="checkbox"
            data-checked={true}
            display="flex"
            justifyContent="center"
            onClick={[Function]}
            opacity="3"
            size={7}
          >
            <div
              className="sc-gsnTZi knjsmK sc-hKMtZM"
              cursor="pointer"
              data-autoid="checkbox"
              data-checked={true}
              onClick={[Function]}
            >
              <Memo(Icon)
                autoid="undefinedcheckbox_icon"
                name="Check"
                noFill={true}
                size="full"
              >
                <Suspense
                  fallback={<ForwardRef(HelpCircle) />}
                >
                  <Styled(Box)
                    autoid="undefinedcheckbox_icon_icon"
                    noFill={true}
                    size="full"
                  >
                    <Box
                      autoid="undefinedcheckbox_icon_icon"
                      className="sc-dkzDqf Vwowz"
                    >
                      <styled.div
                        className="sc-dkzDqf Vwowz"
                        data-autoid="undefinedcheckbox_icon_icon"
                      >
                        <div
                          className="sc-gsnTZi cXXFdo sc-dkzDqf Vwowz"
                          data-autoid="undefinedcheckbox_icon_icon"
                        />
                      </styled.div>
                    </Box>
                  </Styled(Box)>
                  <ForwardRef(HelpCircle)>
                    <svg
                      fill="none"
                      height={24}
                      stroke="currentColor"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth="2"
                      viewBox="0 0 24 24"
                      width={24}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <circle
                        cx="12"
                        cy="12"
                        r="10"
                      />
                      <path
                        d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"
                      />
                      <line
                        x1="12"
                        x2="12.01"
                        y1="17"
                        y2="17"
                      />
                    </svg>
                  </ForwardRef(HelpCircle)>
                </Suspense>
              </Memo(Icon)>
            </div>
          </styled.div>
        </Box>
      </Styled(Box)>
    </Interactable>
  </Checkbox>
</Component>
`;

exports[`<Checkbox /> renders correctly indeterminate 1`] = `
<Component>
  <Checkbox
    indeterminate={true}
  >
    <Interactable
      alignItems="center"
      autoid="checkbox"
      bgColor="neutrals.0"
      border="1"
      borderColor="neutrals.10"
      borderRadius="1"
      cursor="pointer"
      data-indeterminate={true}
      display="flex"
      justifyContent="center"
      onClick={[Function]}
      size={7}
    >
      <Styled(Box)
        alignItems="center"
        bgColor="neutrals.0"
        border="1"
        borderColor="neutrals.10"
        borderRadius="1"
        cursor="pointer"
        data-autoid="checkbox"
        data-indeterminate={true}
        display="flex"
        justifyContent="center"
        onClick={[Function]}
        size={7}
      >
        <Box
          alignItems="center"
          bgColor="neutrals.0"
          border="1"
          borderColor="neutrals.10"
          borderRadius="1"
          className="sc-hKMtZM"
          cursor="pointer"
          data-autoid="checkbox"
          data-indeterminate={true}
          display="flex"
          justifyContent="center"
          onClick={[Function]}
          size={7}
        >
          <styled.div
            alignItems="center"
            bgColor="neutrals.0"
            border="1"
            borderColor="neutrals.10"
            borderRadius="1"
            className="sc-hKMtZM"
            cursor="pointer"
            data-autoid="checkbox"
            data-indeterminate={true}
            display="flex"
            justifyContent="center"
            onClick={[Function]}
            size={7}
          >
            <div
              className="sc-gsnTZi lkeFYh sc-hKMtZM"
              cursor="pointer"
              data-autoid="checkbox"
              data-indeterminate={true}
              onClick={[Function]}
            >
              <Memo(Icon)
                autoid="undefinedcheckbox_icon"
                name="Minus"
                noFill={true}
                size="full"
              >
                <Suspense
                  fallback={<ForwardRef(HelpCircle) />}
                >
                  <Styled(Box)
                    autoid="undefinedcheckbox_icon_icon"
                    noFill={true}
                    size="full"
                  >
                    <Box
                      autoid="undefinedcheckbox_icon_icon"
                      className="sc-dkzDqf Vwowz"
                    >
                      <styled.div
                        className="sc-dkzDqf Vwowz"
                        data-autoid="undefinedcheckbox_icon_icon"
                      >
                        <div
                          className="sc-gsnTZi cXXFdo sc-dkzDqf Vwowz"
                          data-autoid="undefinedcheckbox_icon_icon"
                        />
                      </styled.div>
                    </Box>
                  </Styled(Box)>
                  <ForwardRef(HelpCircle)>
                    <svg
                      fill="none"
                      height={24}
                      stroke="currentColor"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth="2"
                      viewBox="0 0 24 24"
                      width={24}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <circle
                        cx="12"
                        cy="12"
                        r="10"
                      />
                      <path
                        d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"
                      />
                      <line
                        x1="12"
                        x2="12.01"
                        y1="17"
                        y2="17"
                      />
                    </svg>
                  </ForwardRef(HelpCircle)>
                </Suspense>
              </Memo(Icon)>
            </div>
          </styled.div>
        </Box>
      </Styled(Box)>
    </Interactable>
  </Checkbox>
</Component>
`;

exports[`<Checkbox /> renders correctly no icon 1`] = `
<Component>
  <Checkbox>
    <Interactable
      alignItems="center"
      autoid="checkbox"
      bgColor="neutrals.0"
      border="1"
      borderColor="neutrals.10"
      borderRadius="1"
      cursor="pointer"
      display="flex"
      justifyContent="center"
      onClick={[Function]}
      size={7}
    >
      <Styled(Box)
        alignItems="center"
        bgColor="neutrals.0"
        border="1"
        borderColor="neutrals.10"
        borderRadius="1"
        cursor="pointer"
        data-autoid="checkbox"
        display="flex"
        justifyContent="center"
        onClick={[Function]}
        size={7}
      >
        <Box
          alignItems="center"
          bgColor="neutrals.0"
          border="1"
          borderColor="neutrals.10"
          borderRadius="1"
          className="sc-hKMtZM"
          cursor="pointer"
          data-autoid="checkbox"
          display="flex"
          justifyContent="center"
          onClick={[Function]}
          size={7}
        >
          <styled.div
            alignItems="center"
            bgColor="neutrals.0"
            border="1"
            borderColor="neutrals.10"
            borderRadius="1"
            className="sc-hKMtZM"
            cursor="pointer"
            data-autoid="checkbox"
            display="flex"
            justifyContent="center"
            onClick={[Function]}
            size={7}
          >
            <div
              className="sc-gsnTZi lkeFYh sc-hKMtZM"
              cursor="pointer"
              data-autoid="checkbox"
              onClick={[Function]}
            />
          </styled.div>
        </Box>
      </Styled(Box)>
    </Interactable>
  </Checkbox>
</Component>
`;
